{"version":3,"sources":["webpack://ExifReader/webpack/universalModuleDefinition","webpack://ExifReader/webpack/bootstrap","webpack://ExifReader/./src/tag-names-utils.js","webpack://ExifReader/./src/utils.js","webpack://ExifReader/./src/byte-order.js","webpack://ExifReader/./src/exif-reader.js","webpack://ExifReader/./src/image-header.js","webpack://ExifReader/./src/tags.js","webpack://ExifReader/./src/types.js","webpack://ExifReader/./src/tag-names.js","webpack://ExifReader/./src/tag-names-0th-ifd.js","webpack://ExifReader/./src/tag-names-exif-ifd.js","webpack://ExifReader/./src/tag-names-gps-ifd.js","webpack://ExifReader/./src/tag-names-interoperability-ifd.js","webpack://ExifReader/./src/iptc-tags.js","webpack://ExifReader/./src/iptc-tag-names.js","webpack://ExifReader/./src/xmp-tags.js","webpack://ExifReader/./src/xmp-tag-names.js","webpack://ExifReader/./src/errors.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getStringValue","map","charCode","String","fromCharCode","join","getEncodedString","length","encoding","slice","getCharacterArray","string","split","character","charCodeAt","getStringFromDataView","dataView","offset","chars","byteLength","push","getUint8","charArray","LITTLE_ENDIAN","BIG_ENDIAN","getByteOrder","tiffHeaderOffset","getUint16","Error","load","loadView","data","options","arguments","undefined","expanded","DataView","error","console","warn","foundMetaData","tags","ImageHeader","check","_ImageHeader$parseApp","parseAppMarkers","iptcDataOffset","xmpDataOffset","xmpFieldLength","hasExifData","readTags","Tags","read","exif","assign","hasIptcData","IptcTags","iptc","hasXmpData","XmpTags","xmp","exifErrors","MetadataMissingError","errors","MIN_DATA_BUFFER_LENGTH","JPEG_ID","JPEG_ID_SIZE","APP_ID_OFFSET","APP_MARKER_SIZE","TIFF_HEADER_OFFSET","IPTC_DATA_OFFSET","XMP_DATA_OFFSET","SOF0_MARKER","SOF2_MARKER","DHT_MARKER","DQT_MARKER","DRI_MARKER","SOS_MARKER","APP0_MARKER","APP1_MARKER","APP13_MARKER","APP15_MARKER","COMMENT_MARKER","APP1_EXIF_IDENTIFIER","APP1_XMP_IDENTIFIER","APP13_IPTC_IDENTIFIER","isApp1ExifMarker","appMarkerPosition","markerIdLength","_utils","isApp1XMPMarker","isApp13PhotoshopMarker","isAppMarker","appMarker","fieldLength","hasAppMarkers","EXIF_IFD_POINTER_KEY","GPS_INFO_IFD_POINTER_KEY","INTEROPERABILITY_IFD_POINTER_KEY","getTagValueAt","1","Types","getByteAt","2","getAsciiAt","3","getShortAt","4","getLongAt","5","getRationalAt","7","getUndefinedAt","9","getSlongAt","10","getSrationalAt","read0thIfd","byteOrder","readIfd","get0thIfdOffset","ifdType","FIELD_COUNT_SIZE","getTypeSize","numberOfFields","fieldIndex","tag","readTag","description","TAG_TYPE_OFFSET","TAG_COUNT_OFFSET","TAG_VALUE_OFFSET","tagCode","tagType","tagCount","tagValue","typeSizes","tagValueFitsInOffsetSlot","getTagValue","tagValueOffset","tagValueFitsInDataView","tagTypes","asciiValue","decodeURIComponent","escape","decodeAsciiValue","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","next","done","err","return","splitNullSeparatedAsciiString","TagNames","tagName","tagDescription","Array","type","count","valueIndex","getAsciiValue","ByteOrder","readInteroperabilityIfd","readGpsIfd","readExifIfd","BYTE","ASCII","SHORT","LONG","RATIONAL","UNDEFINED","SLONG","SRATIONAL","getUint32","getInt32","typeName","0th","TagNames0thIfd","TagNamesExifIfd","gps","TagNamesGpsIfd","interoperability","TagNamesInteroperabilityIfd","256","257","258","259","262","270","271","272","273","274","277","278","279","282","283","284","296","301","305","306","315","318","319","513","514","529","530","531","532","33432","34665","34853","33434","33437","34850","34852","34855","34856","36864","_tagNamesUtils","36867","36868","37121","37122","37377","37378","37379","37380","37381","37382","37383","37384","37385","37386","37396","37500","37510","37520","37521","37522","40960","40961","40962","40963","40964","40965","41483","41484","41486","41487","41488","41492","_ref","_ref2","_slicedToArray","x","y","41493","41495","41728","41729","41730","41985","41986","41987","41988","41989","41990","41991","41992","41993","41994","41995","41996","42016","0","ref","6","num","8","status","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","BYTES_8BIM","BYTES_8BIM_SIZE","RESOURCE_BLOCK_HEADER_SIZE","NAA_RESOURCE_BLOCK_TYPE","TAG_HEADER_SIZE","getResourceBlock","dataOffset","size","isNaaResourceBlock","resourceBlock","getBlockPadding","leadByte","tagSize","IptcTagNames","TextEncoder","rawTagValue","buffer","TextDecoder","decode","id","_getNaaResourceBlock","naaBlock","getNaaResourceBlock","newDataOffset","endOfBlockOffset","_readTag","parseTags","getCreationDate","date","substr","getCreationTime","time","parsedTime","toString","261","repeatable","276","286","316","326","336","346","encoding_name","356","376","378","512","515","516","517","519","520","522","524","parts","527","534","537","538","539","542","547","549","550","552","554","557","559","562","567","572","574","575","577","582","587","592","597","602","604","607","612","613","615","617","622","627","628","630","632","634","637","642","643","647","662","stringValue","character0","charAt","character1","663","parseInt","664","bits","665","duration","666","712","strValue","intValue","713","formatVersions","00","01","02","03","04","05","06","objectDataPreviewFileFormat","698","699","700","714","1802","1812","1882","convertToObject","node","nodes","isTopNode","childNodes","elements","getChildNodes","nodeName","nodeValue","getTextValue","forEach","isElement","nodeElement","attributes","getAttributes","getElementFromNode","isArray","getElementsFromNodes","element","parseXMPObject","xmpObject","parseNodeAttributesAsTags","_typeof","parseNodeChildrenAsTags","isTagAttribute","getLocalName","getDescription","isNamespaceDefinition","item","getDescriptionOfArray","descriptions","getClearTextKey","getDescriptionOfObject","XmpTagNames","children","parseNodeAsTag","hasNestedSimpleRdfDescription","parseNodeAsSimpleRdfDescription","hasNestedStructureRdfDescription","parseNodeAttributes","parseNodeAsStructureRdfDescription","keys","isCompactStructure","parseNodeAsCompactStructure","getArrayChild","items","parseArrayValue","parseNodeAsArray","getURIValue","parseNodeAsSimpleValue","parseNodeChildrenAsAttributes","parseRdfValue","metadataSize","doc","DOMParser","domParser","xmlSource","parseFromString","documentElement","getDocument","rdf","getRDF","calculateGPSValue","_value$split","_value$split2","degreesString","minutesString","degrees","parseFloat","minutes","Number","isNaN","tiff:Orientation","exif:GPSLatitude","exif:GPSLongitude","message","stack"],"mappings":"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","file":"exif-reader.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ExifReader\"] = factory();\n\telse\n\t\troot[\"ExifReader\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","/* This Source Code Form is subject to the terms of the Mozilla Public\r\n * License, v. 2.0. If a copy of the MPL was not distributed with this\r\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\r\n\r\nexport function getStringValue(value) {\r\n    return value.map((charCode) => String.fromCharCode(charCode)).join('');\r\n}\r\n\r\nexport function getEncodedString(value) {\r\n    if (value.length >= 8) {\r\n        const encoding = getStringValue(value.slice(0, 8));\r\n\r\n        if (encoding === 'ASCII\\x00\\x00\\x00') {\r\n            return getStringValue(value.slice(8));\r\n        } else if (encoding === 'JIS\\x00\\x00\\x00\\x00\\x00') {\r\n            return '[JIS encoded text]';\r\n        } else if (encoding === 'UNICODE\\x00') {\r\n            return '[Unicode encoded text]';\r\n        } else if (encoding === '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00') {\r\n            return '[Undefined encoding]';\r\n        }\r\n    }\r\n\r\n    return 'Undefined';\r\n}\r\n\r\nexport function getCharacterArray(string) {\r\n    return string.split('').map((character) => character.charCodeAt(0));\r\n}\r\n","/* This Source Code Form is subject to the terms of the Mozilla Public\r\n * License, v. 2.0. If a copy of the MPL was not distributed with this\r\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\r\n\r\nexport function getStringFromDataView(dataView, offset, length) {\r\n    const chars = [];\r\n    for (let i = 0; i < length && offset + i < dataView.byteLength; i++) {\r\n        chars.push(dataView.getUint8(offset + i, false));\r\n    }\r\n    return getAsciiValue(chars).join('');\r\n}\r\n\r\nfunction getAsciiValue(charArray) {\r\n    return charArray.map((charCode) => String.fromCharCode(charCode));\r\n}\r\n","/* This Source Code Form is subject to the terms of the Mozilla Public\r\n * License, v. 2.0. If a copy of the MPL was not distributed with this\r\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\r\n\r\nconst LITTLE_ENDIAN = 0x4949;\r\nconst BIG_ENDIAN = 0x4d4d;\r\n\r\nexport default {\r\n    BIG_ENDIAN,\r\n    LITTLE_ENDIAN,\r\n    getByteOrder\r\n};\r\n\r\nfunction getByteOrder(dataView, tiffHeaderOffset) {\r\n    if (dataView.getUint16(tiffHeaderOffset) === LITTLE_ENDIAN) {\r\n        return LITTLE_ENDIAN;\r\n    } else if (dataView.getUint16(tiffHeaderOffset) === BIG_ENDIAN) {\r\n        return BIG_ENDIAN;\r\n    }\r\n    throw new Error('Illegal byte order value. Faulty image.');\r\n}\r\n","/**\r\n * ExifReader\r\n * http://github.com/mattiasw/exifreader\r\n * Copyright (C) 2011-2018  Mattias Wallander <mattias@wallander.eu>\r\n * This Source Code Form is subject to the terms of the Mozilla Public\r\n * License, v. 2.0. If a copy of the MPL was not distributed with this\r\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\r\n */\r\n\r\nimport ImageHeader from './image-header';\r\nimport Tags from './tags';\r\nimport IptcTags from './iptc-tags';\r\nimport XmpTags from './xmp-tags';\r\nimport exifErrors from './errors';\r\n\r\nexport default {\r\n    load,\r\n    loadView,\r\n    errors: exifErrors,\r\n};\r\n\r\nexport function load(data, options = {expanded: false}) {\r\n    let dataView;\r\n\r\n    try {\r\n        dataView = new DataView(data);\r\n    } catch (error) {\r\n        console.warn('Warning: A full DataView implementation is not available. If you\\'re using Node.js you probably want to do this:\\n  1. Install a DataView polyfill, e.g. jdataview: npm install --save jdataview\\n  2. Require that at the top of your script: global.DataView = require(\\'jdataview\\');\\nSee an example of this in the ExifReader example directory.'); // eslint-disable-line no-console\r\n        return {};\r\n    }\r\n\r\n    return loadView(dataView, options);\r\n}\r\n\r\nexport function loadView(dataView, options = {expanded: false}) {\r\n    let foundMetaData = false;\r\n    let tags = {};\r\n\r\n    ImageHeader.check(dataView);\r\n    const {tiffHeaderOffset, iptcDataOffset, xmpDataOffset, xmpFieldLength} = ImageHeader.parseAppMarkers(dataView);\r\n\r\n    if (hasExifData(tiffHeaderOffset)) {\r\n        foundMetaData = true;\r\n        const readTags = Tags.read(dataView, tiffHeaderOffset);\r\n        if (options.expanded) {\r\n            tags.exif = readTags;\r\n        } else {\r\n            tags = Object.assign({}, tags, readTags);\r\n        }\r\n    }\r\n    if (hasIptcData(iptcDataOffset)) {\r\n        foundMetaData = true;\r\n        const readTags = IptcTags.read(dataView, iptcDataOffset);\r\n        if (options.expanded) {\r\n            tags.iptc = readTags;\r\n        } else {\r\n            tags = Object.assign({}, tags, readTags);\r\n        }\r\n    }\r\n    if (hasXmpData(xmpDataOffset)) {\r\n        foundMetaData = true;\r\n        const readTags = XmpTags.read(dataView, xmpDataOffset, xmpFieldLength);\r\n        if (options.expanded) {\r\n            tags.xmp = readTags;\r\n        } else {\r\n            tags = Object.assign({}, tags, readTags);\r\n        }\r\n    }\r\n    if (!foundMetaData) {\r\n        throw new exifErrors.MetadataMissingError();\r\n    }\r\n\r\n    return tags;\r\n}\r\n\r\nfunction hasExifData(tiffHeaderOffset) {\r\n    return tiffHeaderOffset !== undefined;\r\n}\r\n\r\nfunction hasIptcData(iptcDataOffset) {\r\n    return iptcDataOffset !== undefined;\r\n}\r\n\r\nfunction hasXmpData(xmpDataOffset) {\r\n    return xmpDataOffset !== undefined;\r\n}\r\n","/* This Source Code Form is subject to the terms of the Mozilla Public\r\n * License, v. 2.0. If a copy of the MPL was not distributed with this\r\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\r\n\r\nimport {getStringFromDataView} from './utils';\r\n\r\nconst MIN_DATA_BUFFER_LENGTH = 2;\r\nconst JPEG_ID = 0xffd8;\r\nconst JPEG_ID_SIZE = 2;\r\nconst APP_ID_OFFSET = 4;\r\nconst APP_MARKER_SIZE = 2;\r\nconst TIFF_HEADER_OFFSET = 10; // From start of APP1 marker.\r\nconst IPTC_DATA_OFFSET = 18; // From start of APP13 marker.\r\nconst XMP_DATA_OFFSET = 33; // From start of APP1 marker.\r\n\r\nconst SOF0_MARKER = 0xffc0;\r\nconst SOF2_MARKER = 0xffc2;\r\nconst DHT_MARKER = 0xffc4;\r\nconst DQT_MARKER = 0xffdb;\r\nconst DRI_MARKER = 0xffdd;\r\nconst SOS_MARKER = 0xffda;\r\n\r\nconst APP0_MARKER = 0xffe0;\r\nconst APP1_MARKER = 0xffe1;\r\nconst APP13_MARKER = 0xffed;\r\nconst APP15_MARKER = 0xffef;\r\nconst COMMENT_MARKER = 0xfffe;\r\nconst APP1_EXIF_IDENTIFIER = 'Exif';\r\nconst APP1_XMP_IDENTIFIER = 'http://ns.adobe.com/xap/1.0/';\r\nconst APP13_IPTC_IDENTIFIER = 'Photoshop 3.0';\r\n\r\nexport default {\r\n    check,\r\n    parseAppMarkers\r\n};\r\n\r\nfunction check(dataView) {\r\n    if ((dataView.byteLength < MIN_DATA_BUFFER_LENGTH) || (dataView.getUint16(0, false) !== JPEG_ID)) {\r\n        throw new Error('Invalid image format');\r\n    }\r\n}\r\n\r\nfunction parseAppMarkers(dataView) {\r\n    let appMarkerPosition = JPEG_ID_SIZE;\r\n    let fieldLength;\r\n    let tiffHeaderOffset;\r\n    let iptcDataOffset;\r\n    let xmpDataOffset;\r\n    let xmpFieldLength;\r\n\r\n    while (appMarkerPosition + APP_ID_OFFSET + 5 <= dataView.byteLength) {\r\n        if (isApp1ExifMarker(dataView, appMarkerPosition)) {\r\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE, false);\r\n            tiffHeaderOffset = appMarkerPosition + TIFF_HEADER_OFFSET;\r\n        } else if (isApp1XMPMarker(dataView, appMarkerPosition)) {\r\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE, false);\r\n            xmpDataOffset = appMarkerPosition + XMP_DATA_OFFSET;\r\n            xmpFieldLength = fieldLength - (XMP_DATA_OFFSET - APP_MARKER_SIZE);\r\n        } else if (isApp13PhotoshopMarker(dataView, appMarkerPosition)) {\r\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE, false);\r\n            iptcDataOffset = appMarkerPosition + IPTC_DATA_OFFSET;\r\n        } else if (isAppMarker(dataView, appMarkerPosition)) {\r\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE, false);\r\n        } else {\r\n            break;\r\n        }\r\n        appMarkerPosition += APP_MARKER_SIZE + fieldLength;\r\n    }\r\n\r\n    return {\r\n        hasAppMarkers: appMarkerPosition > JPEG_ID_SIZE,\r\n        tiffHeaderOffset,\r\n        iptcDataOffset,\r\n        xmpDataOffset,\r\n        xmpFieldLength\r\n    };\r\n}\r\n\r\nfunction isApp1ExifMarker(dataView, appMarkerPosition) {\r\n    const markerIdLength = APP1_EXIF_IDENTIFIER.length;\r\n\r\n    return (dataView.getUint16(appMarkerPosition, false) === APP1_MARKER)\r\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_EXIF_IDENTIFIER)\r\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength, false) === 0x00);\r\n}\r\n\r\nfunction isApp1XMPMarker(dataView, appMarkerPosition) {\r\n    const markerIdLength = APP1_XMP_IDENTIFIER.length;\r\n\r\n    return (dataView.getUint16(appMarkerPosition, false) === APP1_MARKER)\r\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_XMP_IDENTIFIER)\r\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength, false) === 0x00);\r\n}\r\n\r\nfunction isApp13PhotoshopMarker(dataView, appMarkerPosition) {\r\n    const markerIdLength = APP13_IPTC_IDENTIFIER.length;\r\n\r\n    return (dataView.getUint16(appMarkerPosition, false) === APP13_MARKER)\r\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP13_IPTC_IDENTIFIER)\r\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength, false) === 0x00);\r\n}\r\n\r\nfunction isAppMarker(dataView, appMarkerPosition) {\r\n    const appMarker = dataView.getUint16(appMarkerPosition, false);\r\n    return ((appMarker >= APP0_MARKER) && (appMarker <= APP15_MARKER))\r\n        || (appMarker === COMMENT_MARKER)\r\n        || (appMarker === SOF0_MARKER)\r\n        || (appMarker === SOF2_MARKER)\r\n        || (appMarker === DHT_MARKER)\r\n        || (appMarker === DQT_MARKER)\r\n        || (appMarker === DRI_MARKER)\r\n        || (appMarker === SOS_MARKER);\r\n}\r\n","/* This Source Code Form is subject to the terms of the Mozilla Public\r\n * License, v. 2.0. If a copy of the MPL was not distributed with this\r\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\r\n\r\nimport ByteOrder from './byte-order';\r\nimport Types from './types';\r\nimport TagNames from './tag-names';\r\n\r\nconst EXIF_IFD_POINTER_KEY = 'Exif IFD Pointer';\r\nconst GPS_INFO_IFD_POINTER_KEY = 'GPS Info IFD Pointer';\r\nconst INTEROPERABILITY_IFD_POINTER_KEY = 'Interoperability IFD Pointer';\r\n\r\nconst getTagValueAt = {\r\n    1: Types.getByteAt,\r\n    2: Types.getAsciiAt,\r\n    3: Types.getShortAt,\r\n    4: Types.getLongAt,\r\n    5: Types.getRationalAt,\r\n    7: Types.getUndefinedAt,\r\n    9: Types.getSlongAt,\r\n    10: Types.getSrationalAt\r\n};\r\n\r\nexport default {\r\n    read\r\n};\r\n\r\nfunction read(dataView, tiffHeaderOffset) {\r\n    const byteOrder = ByteOrder.getByteOrder(dataView, tiffHeaderOffset);\r\n    let tags = read0thIfd(dataView, tiffHeaderOffset, byteOrder);\r\n    tags = readExifIfd(tags, dataView, tiffHeaderOffset, byteOrder);\r\n    tags = readGpsIfd(tags, dataView, tiffHeaderOffset, byteOrder);\r\n    tags = readInteroperabilityIfd(tags, dataView, tiffHeaderOffset, byteOrder);\r\n\r\n    return tags;\r\n}\r\n\r\nfunction read0thIfd(dataView, tiffHeaderOffset, byteOrder) {\r\n    return readIfd(dataView, '0th', tiffHeaderOffset, get0thIfdOffset(dataView, tiffHeaderOffset, byteOrder), byteOrder);\r\n}\r\n\r\nfunction get0thIfdOffset(dataView, tiffHeaderOffset, byteOrder) {\r\n    return tiffHeaderOffset + Types.getLongAt(dataView, tiffHeaderOffset + 4, byteOrder);\r\n}\r\n\r\nfunction readExifIfd(tags, dataView, tiffHeaderOffset, byteOrder) {\r\n    if (tags[EXIF_IFD_POINTER_KEY] !== undefined) {\r\n        return Object.assign(tags, readIfd(dataView, 'exif', tiffHeaderOffset, tiffHeaderOffset + tags[EXIF_IFD_POINTER_KEY].value, byteOrder));\r\n    }\r\n\r\n    return tags;\r\n}\r\n\r\nfunction readGpsIfd(tags, dataView, tiffHeaderOffset, byteOrder) {\r\n    if (tags[GPS_INFO_IFD_POINTER_KEY] !== undefined) {\r\n        return Object.assign(tags, readIfd(dataView, 'gps', tiffHeaderOffset, tiffHeaderOffset + tags[GPS_INFO_IFD_POINTER_KEY].value, byteOrder));\r\n    }\r\n\r\n    return tags;\r\n}\r\n\r\nfunction readInteroperabilityIfd(tags, dataView, tiffHeaderOffset, byteOrder) {\r\n    if (tags[INTEROPERABILITY_IFD_POINTER_KEY] !== undefined) {\r\n        return Object.assign(tags, readIfd(dataView, 'interoperability', tiffHeaderOffset, tiffHeaderOffset + tags[INTEROPERABILITY_IFD_POINTER_KEY].value, byteOrder));\r\n    }\r\n\r\n    return tags;\r\n}\r\n\r\nfunction readIfd(dataView, ifdType, tiffHeaderOffset, offset, byteOrder) {\r\n    const FIELD_COUNT_SIZE = Types.getTypeSize('SHORT');\r\n    const FIELD_SIZE = 12;\r\n\r\n    const tags = {};\r\n    const numberOfFields = Types.getShortAt(dataView, offset, byteOrder);\r\n\r\n    offset += FIELD_COUNT_SIZE;\r\n    for (let fieldIndex = 0; fieldIndex < numberOfFields; fieldIndex++) {\r\n        const tag = readTag(dataView, ifdType, tiffHeaderOffset, offset, byteOrder);\r\n        if (tag !== undefined) {\r\n            tags[tag.name] = {'value': tag.value, 'description': tag.description};\r\n        }\r\n        offset += FIELD_SIZE;\r\n    }\r\n\r\n    return tags;\r\n}\r\n\r\nfunction readTag(dataView, ifdType, tiffHeaderOffset, offset, byteOrder) {\r\n    const TAG_TYPE_OFFSET = Types.getTypeSize('SHORT');\r\n    const TAG_COUNT_OFFSET = TAG_TYPE_OFFSET + Types.getTypeSize('SHORT');\r\n    const TAG_VALUE_OFFSET = TAG_COUNT_OFFSET + Types.getTypeSize('LONG');\r\n\r\n    const tagCode = Types.getShortAt(dataView, offset, byteOrder);\r\n    const tagType = Types.getShortAt(dataView, offset + TAG_TYPE_OFFSET, byteOrder);\r\n    const tagCount = Types.getLongAt(dataView, offset + TAG_COUNT_OFFSET, byteOrder);\r\n    let tagValue;\r\n\r\n    if (Types.typeSizes[tagType] === undefined) {\r\n        return undefined;\r\n    }\r\n\r\n    if (tagValueFitsInOffsetSlot(tagType, tagCount)) {\r\n        tagValue = getTagValue(dataView, offset + TAG_VALUE_OFFSET, tagType, tagCount, byteOrder);\r\n    } else {\r\n        const tagValueOffset = Types.getLongAt(dataView, offset + TAG_VALUE_OFFSET, byteOrder);\r\n        if (tagValueFitsInDataView(dataView, tiffHeaderOffset, tagValueOffset, tagType, tagCount)) {\r\n            tagValue = getTagValue(dataView, tiffHeaderOffset + tagValueOffset, tagType, tagCount, byteOrder);\r\n        } else {\r\n            tagValue = '<faulty value>';\r\n        }\r\n    }\r\n\r\n    if (tagType === Types.tagTypes['ASCII']) {\r\n        tagValue = splitNullSeparatedAsciiString(tagValue);\r\n        tagValue = decodeAsciiValue(tagValue);\r\n    }\r\n\r\n    if (TagNames[ifdType][tagCode] !== undefined) {\r\n        let tagName, tagDescription;\r\n\r\n        if ((TagNames[ifdType][tagCode]['name'] !== undefined) && (TagNames[ifdType][tagCode]['description'] !== undefined)) {\r\n            tagName = TagNames[ifdType][tagCode]['name'];\r\n            tagDescription = TagNames[ifdType][tagCode]['description'](tagValue);\r\n        } else {\r\n            tagName = TagNames[ifdType][tagCode];\r\n            if (tagValue instanceof Array) {\r\n                tagDescription = tagValue.join(', ');\r\n            } else {\r\n                tagDescription = tagValue;\r\n            }\r\n        }\r\n        return {\r\n            name: tagName,\r\n            value: tagValue,\r\n            description: tagDescription\r\n        };\r\n    }\r\n\r\n    return {\r\n        name: `undefined-${tagCode}`,\r\n        value: tagValue,\r\n        description: tagValue\r\n    };\r\n}\r\n\r\nfunction tagValueFitsInOffsetSlot(tagType, tagCount) {\r\n    return Types.typeSizes[tagType] * tagCount <= Types.getTypeSize('LONG');\r\n}\r\n\r\nfunction getTagValue(dataView, offset, type, count, byteOrder) {\r\n    let value = [];\r\n\r\n    for (let valueIndex = 0; valueIndex < count; valueIndex++) {\r\n        value.push(getTagValueAt[type](dataView, offset, byteOrder));\r\n        offset += Types.typeSizes[type];\r\n    }\r\n\r\n    if (type === Types.tagTypes['ASCII']) {\r\n        value = Types.getAsciiValue(value);\r\n    } else if (value.length === 1) {\r\n        value = value[0];\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\nfunction tagValueFitsInDataView(dataView, tiffHeaderOffset, tagValueOffset, tagType, tagCount) {\r\n    return tiffHeaderOffset + tagValueOffset + Types.typeSizes[tagType] * tagCount <= dataView.byteLength;\r\n}\r\n\r\nfunction splitNullSeparatedAsciiString(string) {\r\n    const tagValue = [];\r\n    let i = 0;\r\n\r\n    for (const character of string) {\r\n        if (character === '\\x00') {\r\n            i++;\r\n            continue;\r\n        }\r\n        if (tagValue[i] === undefined) {\r\n            tagValue[i] = '';\r\n        }\r\n        tagValue[i] += character;\r\n    }\r\n\r\n    return tagValue;\r\n}\r\n\r\nfunction decodeAsciiValue(asciiValue) {\r\n    try {\r\n        return asciiValue.map((value) => decodeURIComponent(escape(value)));\r\n    } catch (error) {\r\n        return asciiValue;\r\n    }\r\n}\r\n","/* This Source Code Form is subject to the terms of the Mozilla Public\r\n * License, v. 2.0. If a copy of the MPL was not distributed with this\r\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\r\n\r\nimport ByteOrder from './byte-order';\r\n\r\nconst typeSizes = {\r\n    1: 1, // BYTE\r\n    2: 1, // ASCII\r\n    3: 2, // SHORT\r\n    4: 4, // LONG\r\n    5: 8, // RATIONAL\r\n    7: 1, // UNDEFINED\r\n    9: 4, // SLONG\r\n    10: 8 // SRATIONAL\r\n};\r\n\r\nconst tagTypes = {\r\n    'BYTE': 1,\r\n    'ASCII': 2,\r\n    'SHORT': 3,\r\n    'LONG': 4,\r\n    'RATIONAL': 5,\r\n    'UNDEFINED': 7,\r\n    'SLONG': 9,\r\n    'SRATIONAL': 10\r\n};\r\n\r\nexport default {\r\n    getAsciiValue,\r\n    getByteAt,\r\n    getAsciiAt,\r\n    getShortAt,\r\n    getLongAt,\r\n    getRationalAt,\r\n    getUndefinedAt,\r\n    getSlongAt,\r\n    getSrationalAt,\r\n    typeSizes,\r\n    tagTypes,\r\n    getTypeSize\r\n};\r\n\r\nfunction getAsciiValue(charArray) {\r\n    return charArray.map((charCode) => String.fromCharCode(charCode));\r\n}\r\n\r\nfunction getByteAt(dataView, offset) {\r\n    return dataView.getUint8(offset);\r\n}\r\n\r\nfunction getAsciiAt(dataView, offset) {\r\n    return dataView.getUint8(offset);\r\n}\r\n\r\nfunction getShortAt(dataView, offset, byteOrder) {\r\n    return dataView.getUint16(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\r\n}\r\n\r\nfunction getLongAt(dataView, offset, byteOrder) {\r\n    return dataView.getUint32(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\r\n}\r\n\r\nfunction getRationalAt(dataView, offset, byteOrder) {\r\n    return getLongAt(dataView, offset, byteOrder) / getLongAt(dataView, offset + 4, byteOrder);\r\n}\r\n\r\nfunction getUndefinedAt(dataView, offset) {\r\n    return getByteAt(dataView, offset);\r\n}\r\n\r\nfunction getSlongAt(dataView, offset, byteOrder) {\r\n    return dataView.getInt32(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\r\n}\r\n\r\nfunction getSrationalAt(dataView, offset, byteOrder) {\r\n    return getSlongAt(dataView, offset, byteOrder) / getSlongAt(dataView, offset + 4, byteOrder);\r\n}\r\n\r\nfunction getTypeSize(typeName) {\r\n    if (tagTypes[typeName] === undefined) {\r\n        throw new Error('No such type found.');\r\n    }\r\n\r\n    return typeSizes[tagTypes[typeName]];\r\n}\r\n","/* This Source Code Form is subject to the terms of the Mozilla Public\r\n * License, v. 2.0. If a copy of the MPL was not distributed with this\r\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\r\n\r\nimport TagNames0thIfd from './tag-names-0th-ifd';\r\nimport TagNamesExifIfd from './tag-names-exif-ifd';\r\nimport TagNamesGpsIfd from './tag-names-gps-ifd';\r\nimport TagNamesInteroperabilityIfd from './tag-names-interoperability-ifd';\r\n\r\nexport default {\r\n    '0th': TagNames0thIfd,\r\n    'exif': TagNamesExifIfd,\r\n    'gps': TagNamesGpsIfd,\r\n    'interoperability': TagNamesInteroperabilityIfd\r\n};\r\n","/* This Source Code Form is subject to the terms of the Mozilla Public\r\n * License, v. 2.0. If a copy of the MPL was not distributed with this\r\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\r\n\r\nexport default {\r\n    0x0100: 'ImageWidth',\r\n    0x0101: 'ImageLength',\r\n    0x0102: 'BitsPerSample',\r\n    0x0103: 'Compression',\r\n    0x0106: 'PhotometricInterpretation',\r\n    0x010e: 'ImageDescription',\r\n    0x010f: 'Make',\r\n    0x0110: 'Model',\r\n    0x0111: 'StripOffsets',\r\n    0x0112: {\r\n        name: 'Orientation',\r\n        description: (value) => {\r\n            if (value === 1) {\r\n                return 'top-left';\r\n            }\r\n            if (value === 2) {\r\n                return 'top-right';\r\n            }\r\n            if (value === 3) {\r\n                return 'bottom-right';\r\n            }\r\n            if (value === 4) {\r\n                return 'bottom-left';\r\n            }\r\n            if (value === 5) {\r\n                return 'left-top';\r\n            }\r\n            if (value === 6) {\r\n                return 'right-top';\r\n            }\r\n            if (value === 7) {\r\n                return 'right-bottom';\r\n            }\r\n            if (value === 8) {\r\n                return 'left-bottom';\r\n            }\r\n            return 'Undefined';\r\n        }\r\n    },\r\n    0x0115: 'SamplesPerPixel',\r\n    0x0116: 'RowsPerStrip',\r\n    0x0117: 'StripByteCounts',\r\n    0x011a: 'XResolution',\r\n    0x011b: 'YResolution',\r\n    0x011c: 'PlanarConfiguration',\r\n    0x0128: {\r\n        name: 'ResolutionUnit',\r\n        description: (value) => {\r\n            if (value === 2) {\r\n                return 'inches';\r\n            }\r\n            if (value === 3) {\r\n                return 'centimeters';\r\n            }\r\n            return 'Unknown';\r\n        }\r\n    },\r\n    0x012d: 'TransferFunction',\r\n    0x0131: 'Software',\r\n    0x0132: 'DateTime',\r\n    0x013b: 'Artist',\r\n    0x013e: 'WhitePoint',\r\n    0x013f: 'PrimaryChromaticities',\r\n    0x0201: 'JPEGInterchangeFormat',\r\n    0x0202: 'JPEGInterchangeFormatLength',\r\n    0x0211: 'YCbCrCoefficients',\r\n    0x0212: 'YCbCrSubSampling',\r\n    0x0213: {\r\n        name: 'YCbCrPositioning',\r\n        description: (value) => {\r\n            if (value === 1) {\r\n                return 'centered';\r\n            }\r\n            if (value === 2) {\r\n                return 'co-sited';\r\n            }\r\n            return 'undefined ' + value;\r\n        }\r\n    },\r\n    0x0214: 'ReferenceBlackWhite',\r\n    0x8298: {\r\n        name: 'Copyright',\r\n        description: (value) => value.join('; ')\r\n    },\r\n    0x8769: 'Exif IFD Pointer',\r\n    0x8825: 'GPS Info IFD Pointer'\r\n};\r\n","/* This Source Code Form is subject to the terms of the Mozilla Public\r\n * License, v. 2.0. If a copy of the MPL was not distributed with this\r\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\r\n\r\nimport {getStringValue, getEncodedString} from './tag-names-utils';\r\n\r\nexport default {\r\n    0x829a: 'ExposureTime',\r\n    0x829d: 'FNumber',\r\n    0x8822: {\r\n        'name': 'ExposureProgram',\r\n        'description': (value) => {\r\n            if (value === 0) {\r\n                return 'Undefined';\r\n            } else if (value === 1) {\r\n                return 'Manual';\r\n            } else if (value === 2) {\r\n                return 'Normal program';\r\n            } else if (value === 3) {\r\n                return 'Aperture priority';\r\n            } else if (value === 4) {\r\n                return 'Shutter priority';\r\n            } else if (value === 5) {\r\n                return 'Creative program';\r\n            } else if (value === 6) {\r\n                return 'Action program';\r\n            } else if (value === 7) {\r\n                return 'Portrait mode';\r\n            } else if (value === 8) {\r\n                return 'Landscape mode';\r\n            }\r\n            return 'Unknown';\r\n        }\r\n    },\r\n    0x8824: 'SpectralSensitivity',\r\n    0x8827: 'ISOSpeedRatings',\r\n    0x8828: {\r\n        'name': 'OECF',\r\n        'description': () => '[Raw OECF table data]'\r\n    },\r\n    0x9000: {\r\n        'name': 'ExifVersion',\r\n        'description': (value) => getStringValue(value)\r\n    },\r\n    0x9003: 'DateTimeOriginal',\r\n    0x9004: 'DateTimeDigitized',\r\n    0x9101: {\r\n        'name': 'ComponentsConfiguration',\r\n        'description': (value) => {\r\n            return value.map((character) => {\r\n                if (character === 0x31) {\r\n                    return 'Y';\r\n                } else if (character === 0x32) {\r\n                    return 'Cb';\r\n                } else if (character === 0x33) {\r\n                    return 'Cr';\r\n                } else if (character === 0x34) {\r\n                    return 'R';\r\n                } else if (character === 0x35) {\r\n                    return 'G';\r\n                } else if (character === 0x36) {\r\n                    return 'B';\r\n                }\r\n            }).join('');\r\n        }\r\n    },\r\n    0x9102: 'CompressedBitsPerPixel',\r\n    0x9201: 'ShutterSpeedValue',\r\n    0x9202: 'ApertureValue',\r\n    0x9203: 'BrightnessValue',\r\n    0x9204: 'ExposureBiasValue',\r\n    0x9205: 'MaxApertureValue',\r\n    0x9206: 'SubjectDistance',\r\n    0x9207: {\r\n        'name': 'MeteringMode',\r\n        'description': (value) => {\r\n            if (value === 1) {\r\n                return 'Average';\r\n            } else if (value === 2) {\r\n                return 'CenterWeightedAverage';\r\n            } else if (value === 3) {\r\n                return 'Spot';\r\n            } else if (value === 4) {\r\n                return 'MultiSpot';\r\n            } else if (value === 5) {\r\n                return 'Pattern';\r\n            } else if (value === 6) {\r\n                return 'Partial';\r\n            } else if (value === 255) {\r\n                return 'Other';\r\n            }\r\n            return 'Unknown';\r\n        }\r\n    },\r\n    0x9208: {\r\n        'name': 'LightSource',\r\n        'description': (value) => {\r\n            if (value === 1) {\r\n                return 'Daylight';\r\n            } else if (value === 2) {\r\n                return 'Fluorescent';\r\n            } else if (value === 3) {\r\n                return 'Tungsten (incandescent light)';\r\n            } else if (value === 4) {\r\n                return 'Flash';\r\n            } else if (value === 9) {\r\n                return 'Fine weather';\r\n            } else if (value === 10) {\r\n                return 'Cloudy weather';\r\n            } else if (value === 11) {\r\n                return 'Shade';\r\n            } else if (value === 12) {\r\n                return 'Daylight fluorescent (D 5700 – 7100K)';\r\n            } else if (value === 13) {\r\n                return 'Day white fluorescent (N 4600 – 5400K)';\r\n            } else if (value === 14) {\r\n                return 'Cool white fluorescent (W 3900 – 4500K)';\r\n            } else if (value === 15) {\r\n                return 'White fluorescent (WW 3200 – 3700K)';\r\n            } else if (value === 17) {\r\n                return 'Standard light A';\r\n            } else if (value === 18) {\r\n                return 'Standard light B';\r\n            } else if (value === 19) {\r\n                return 'Standard light C';\r\n            } else if (value === 20) {\r\n                return 'D55';\r\n            } else if (value === 21) {\r\n                return 'D65';\r\n            } else if (value === 22) {\r\n                return 'D75';\r\n            } else if (value === 23) {\r\n                return 'D50';\r\n            } else if (value === 24) {\r\n                return 'ISO studio tungsten';\r\n            } else if (value === 255) {\r\n                return 'Other light source';\r\n            }\r\n            return 'Unknown';\r\n        }\r\n    },\r\n    0x9209: {\r\n        'name': 'Flash',\r\n        'description': (value) => {\r\n            if (value === 0x00) {\r\n                return 'Flash did not fire';\r\n            } else if (value === 0x01) {\r\n                return 'Flash fired';\r\n            } else if (value === 0x05) {\r\n                return 'Strobe return light not detected';\r\n            } else if (value === 0x07) {\r\n                return 'Strobe return light detected';\r\n            } else if (value === 0x09) {\r\n                return 'Flash fired, compulsory flash mode';\r\n            } else if (value === 0x0d) {\r\n                return 'Flash fired, compulsory flash mode, return light not detected';\r\n            } else if (value === 0x0f) {\r\n                return 'Flash fired, compulsory flash mode, return light detected';\r\n            } else if (value === 0x10) {\r\n                return 'Flash did not fire, compulsory flash mode';\r\n            } else if (value === 0x18) {\r\n                return 'Flash did not fire, auto mode';\r\n            } else if (value === 0x19) {\r\n                return 'Flash fired, auto mode';\r\n            } else if (value === 0x1d) {\r\n                return 'Flash fired, auto mode, return light not detected';\r\n            } else if (value === 0x1f) {\r\n                return 'Flash fired, auto mode, return light detected';\r\n            } else if (value === 0x20) {\r\n                return 'No flash function';\r\n            } else if (value === 0x41) {\r\n                return 'Flash fired, red-eye reduction mode';\r\n            } else if (value === 0x45) {\r\n                return 'Flash fired, red-eye reduction mode, return light not detected';\r\n            } else if (value === 0x47) {\r\n                return 'Flash fired, red-eye reduction mode, return light detected';\r\n            } else if (value === 0x49) {\r\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode';\r\n            } else if (value === 0x4d) {\r\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected';\r\n            } else if (value === 0x4f) {\r\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode, return light detected';\r\n            } else if (value === 0x59) {\r\n                return 'Flash fired, auto mode, red-eye reduction mode';\r\n            } else if (value === 0x5d) {\r\n                return 'Flash fired, auto mode, return light not detected, red-eye reduction mode';\r\n            } else if (value === 0x5f) {\r\n                return 'Flash fired, auto mode, return light detected, red-eye reduction mode';\r\n            }\r\n            return 'Unknown';\r\n        }\r\n    },\r\n    0x920a: 'FocalLength',\r\n    0x9214: {\r\n        'name': 'SubjectArea',\r\n        'description': (value) => {\r\n            if (value.length === 2) {\r\n                return `Location; X: ${value[0]}, Y: ${value[1]}`;\r\n            } else if (value.length === 3) {\r\n                return `Circle; X: ${value[0]}, Y: ${value[1]}, diameter: ${value[2]}`;\r\n            } else if (value.length === 4) {\r\n                return `Rectangle; X: ${value[0]}, Y: ${value[1]}, width: ${value[2]}, height: ${value[3]}`;\r\n            }\r\n            return 'Unknown';\r\n        }\r\n    },\r\n    0x927c: {\r\n        'name': 'MakerNote',\r\n        'description': () => '[Raw maker note data]'\r\n    },\r\n    0x9286: {\r\n        'name': 'UserComment',\r\n        'description': getEncodedString\r\n    },\r\n    0x9290: 'SubSecTime',\r\n    0x9291: 'SubSecTimeOriginal',\r\n    0x9292: 'SubSecTimeDigitized',\r\n    0xa000: {\r\n        'name': 'FlashpixVersion',\r\n        'description': (value) => value.map((charCode) => String.fromCharCode(charCode)).join('')\r\n    },\r\n    0xa001: {\r\n        'name': 'ColorSpace',\r\n        'description': (value) => {\r\n            if (value === 1) {\r\n                return 'sRGB';\r\n            } else if (value === 0xffff) {\r\n                return 'Uncalibrated';\r\n            }\r\n            return 'Unknown';\r\n        }\r\n    },\r\n    0xa002: 'PixelXDimension',\r\n    0xa003: 'PixelYDimension',\r\n    0xa004: 'RelatedSoundFile',\r\n    0xa005: 'Interoperability IFD Pointer',\r\n    0xa20b: 'FlashEnergy',\r\n    0xa20c: {\r\n        'name': 'SpatialFrequencyResponse',\r\n        'description': () => '[Raw SFR table data]'\r\n    },\r\n    0xa20e: 'FocalPlaneXResolution',\r\n    0xa20f: 'FocalPlaneYResolution',\r\n    0xa210: {\r\n        'name': 'FocalPlaneResolutionUnit',\r\n        'description': (value) => {\r\n            if (value === 2) {\r\n                return 'inches';\r\n            } else if (value === 3) {\r\n                return 'centimeters';\r\n            }\r\n            return 'Unknown';\r\n        }\r\n    },\r\n    0xa214: {\r\n        'name': 'SubjectLocation',\r\n        'description': ([x, y]) => `X: ${x}, Y: ${y}`\r\n    },\r\n    0xa215: 'ExposureIndex',\r\n    0xa217: {\r\n        'name': 'SensingMethod',\r\n        'description': (value) => {\r\n            if (value === 1) {\r\n                return 'Undefined';\r\n            } else if (value === 2) {\r\n                return 'One-chip color area sensor';\r\n            } else if (value === 3) {\r\n                return 'Two-chip color area sensor';\r\n            } else if (value === 4) {\r\n                return 'Three-chip color area sensor';\r\n            } else if (value === 5) {\r\n                return 'Color sequential area sensor';\r\n            } else if (value === 7) {\r\n                return 'Trilinear sensor';\r\n            } else if (value === 8) {\r\n                return 'Color sequential linear sensor';\r\n            }\r\n            return 'Unknown';\r\n        }\r\n    },\r\n    0xa300: {\r\n        'name': 'FileSource',\r\n        'description': (value) => {\r\n            if (value === 3) {\r\n                return 'DSC';\r\n            }\r\n            return 'Unknown';\r\n        }\r\n    },\r\n    0xa301: {\r\n        'name': 'SceneType',\r\n        'description': (value) => {\r\n            if (value === 1) {\r\n                return 'A directly photographed image';\r\n            }\r\n            return 'Unknown';\r\n        }\r\n    },\r\n    0xa302: {\r\n        'name': 'CFAPattern',\r\n        'description': () => '[Raw CFA pattern table data]'\r\n    },\r\n    0xa401: {\r\n        'name': 'CustomRendered',\r\n        'description': (value) => {\r\n            if (value === 0) {\r\n                return 'Normal process';\r\n            } else if (value === 1) {\r\n                return 'Custom process';\r\n            }\r\n            return 'Unknown';\r\n        }\r\n    },\r\n    0xa402: {\r\n        'name': 'ExposureMode',\r\n        'description': (value) => {\r\n            if (value === 0) {\r\n                return 'Auto exposure';\r\n            } else if (value === 1) {\r\n                return 'Manual exposure';\r\n            } else if (value === 2) {\r\n                return 'Auto bracket';\r\n            }\r\n            return 'Unknown';\r\n        }\r\n    },\r\n    0xa403: {\r\n        'name': 'WhiteBalance',\r\n        'description': (value) => {\r\n            if (value === 0) {\r\n                return 'Auto white balance';\r\n            } else if (value === 1) {\r\n                return 'Manual white balance';\r\n            }\r\n            return 'Unknown';\r\n        }\r\n    },\r\n    0xa404: {\r\n        'name': 'DigitalZoomRatio',\r\n        'description': (value) => {\r\n            if (value === 0) {\r\n                return 'Digital zoom was not used';\r\n            }\r\n            return value;\r\n        }\r\n    },\r\n    0xa405: {\r\n        'name': 'FocalLengthIn35mmFilm',\r\n        'description': (value) => {\r\n            if (value === 0) {\r\n                return 'Unknown';\r\n            }\r\n            return value;\r\n        }\r\n    },\r\n    0xa406: {\r\n        'name': 'SceneCaptureType',\r\n        'description': (value) => {\r\n            if (value === 0) {\r\n                return 'Standard';\r\n            } else if (value === 1) {\r\n                return 'Landscape';\r\n            } else if (value === 2) {\r\n                return 'Portrait';\r\n            } else if (value === 3) {\r\n                return 'Night scene';\r\n            }\r\n            return 'Unknown';\r\n        }\r\n    },\r\n    0xa407: {\r\n        'name': 'GainControl',\r\n        'description': (value) => {\r\n            if (value === 0) {\r\n                return 'None';\r\n            } else if (value === 1) {\r\n                return 'Low gain up';\r\n            } else if (value === 2) {\r\n                return 'High gain up';\r\n            } else if (value === 3) {\r\n                return 'Low gain down';\r\n            } else if (value === 4) {\r\n                return 'High gain down';\r\n            }\r\n            return 'Unknown';\r\n        }\r\n    },\r\n    0xa408: {\r\n        'name': 'Contrast',\r\n        'description': (value) => {\r\n            if (value === 0) {\r\n                return 'Normal';\r\n            } else if (value === 1) {\r\n                return 'Soft';\r\n            } else if (value === 2) {\r\n                return 'Hard';\r\n            }\r\n            return 'Unknown';\r\n        }\r\n    },\r\n    0xa409: {\r\n        'name': 'Saturation',\r\n        'description': (value) => {\r\n            if (value === 0) {\r\n                return 'Normal';\r\n            } else if (value === 1) {\r\n                return 'Low saturation';\r\n            } else if (value === 2) {\r\n                return 'High saturation';\r\n            }\r\n            return 'Unknown';\r\n        }\r\n    },\r\n    0xa40a: {\r\n        'name': 'Sharpness',\r\n        'description': (value) => {\r\n            if (value === 0) {\r\n                return 'Normal';\r\n            } else if (value === 1) {\r\n                return 'Soft';\r\n            } else if (value === 2) {\r\n                return 'Hard';\r\n            }\r\n            return 'Unknown';\r\n        }\r\n    },\r\n    0xa40b: {\r\n        'name': 'DeviceSettingDescription',\r\n        'description': () => '[Raw device settings table data]'\r\n    },\r\n    0xa40c: {\r\n        'name': 'SubjectDistanceRange',\r\n        'description': (value) => {\r\n            if (value === 1) {\r\n                return 'Macro';\r\n            } else if (value === 2) {\r\n                return 'Close view';\r\n            } else if (value === 3) {\r\n                return 'Distant view';\r\n            }\r\n            return 'Unknown';\r\n        }\r\n    },\r\n    0xa420: 'ImageUniqueID'\r\n};\r\n","/* This Source Code Form is subject to the terms of the Mozilla Public\r\n * License, v. 2.0. If a copy of the MPL was not distributed with this\r\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\r\n\r\nimport {getEncodedString} from './tag-names-utils';\r\n\r\nexport default {\r\n    0x0000: {\r\n        'name': 'GPSVersionID',\r\n        'description': (value) => {\r\n            if (value[0] === 2 && value[1] === 2 && value[2] === 0 && value[3] === 0) {\r\n                return 'Version 2.2';\r\n            }\r\n            return 'Unknown';\r\n        }\r\n    },\r\n    0x0001: {\r\n        'name': 'GPSLatitudeRef',\r\n        'description': (value) => {\r\n            const ref = value.join('');\r\n            if (ref === 'N') {\r\n                return 'North latitude';\r\n            } else if (ref === 'S') {\r\n                return 'South latitude';\r\n            }\r\n            return 'Unknown';\r\n        }\r\n    },\r\n    0x0002: {\r\n        'name': 'GPSLatitude',\r\n        'description': (value) => {\r\n            return value[0] + value[1] / 60 + value[2] / 3600;\r\n        }\r\n    },\r\n    0x0003: {\r\n        'name': 'GPSLongitudeRef',\r\n        'description': (value) => {\r\n            const ref = value.join('');\r\n            if (ref === 'E') {\r\n                return 'East longitude';\r\n            } else if (ref === 'W') {\r\n                return 'West longitude';\r\n            }\r\n            return 'Unknown';\r\n        }\r\n    },\r\n    0x0004: {\r\n        'name': 'GPSLongitude',\r\n        'description': (value) => {\r\n            return value[0] + value[1] / 60 + value[2] / 3600;\r\n        }\r\n    },\r\n    0x0005: {\r\n        'name': 'GPSAltitudeRef',\r\n        'description': (value) => {\r\n            if (value === 0) {\r\n                return 'Sea level';\r\n            } else if (value === 1) {\r\n                return 'Sea level reference (negative value)';\r\n            }\r\n            return 'Unknown';\r\n        }\r\n    },\r\n    0x0006: {\r\n        'name': 'GPSAltitude',\r\n        'description': (value) => {\r\n            return value + ' m';\r\n        }\r\n    },\r\n    0x0007: {\r\n        'name': 'GPSTimeStamp',\r\n        'description': (value) => {\r\n            return value.map((num) => {\r\n                if (`${num}`.length === 1) {\r\n                    return `0${num}`;\r\n                }\r\n                return num;\r\n            }).join(':');\r\n        }\r\n    },\r\n    0x0008: 'GPSSatellites',\r\n    0x0009: {\r\n        'name': 'GPSStatus',\r\n        'description': (value) => {\r\n            const status = value.join('');\r\n            if (status === 'A') {\r\n                return 'Measurement in progress';\r\n            } else if (status === 'V') {\r\n                return 'Measurement Interoperability';\r\n            }\r\n            return 'Unknown';\r\n        }\r\n    },\r\n    0x000a: {\r\n        'name': 'GPSMeasureMode',\r\n        'description': (value) => {\r\n            const mode = value.join('');\r\n            if (mode === '2') {\r\n                return '2-dimensional measurement';\r\n            } else if (mode === '3') {\r\n                return '3-dimensional measurement';\r\n            }\r\n            return 'Unknown';\r\n        }\r\n    },\r\n    0x000b: 'GPSDOP',\r\n    0x000c: {\r\n        'name': 'GPSSpeedRef',\r\n        'description': (value) => {\r\n            const ref = value.join('');\r\n            if (ref === 'K') {\r\n                return 'Kilometers per hour';\r\n            } else if (ref === 'M') {\r\n                return 'Miles per hour';\r\n            } else if (ref === 'N') {\r\n                return 'Knots';\r\n            }\r\n            return 'Unknown';\r\n        }\r\n    },\r\n    0x000d: 'GPSSpeed',\r\n    0x000e: {\r\n        'name': 'GPSTrackRef',\r\n        'description': (value) => {\r\n            const ref = value.join('');\r\n            if (ref === 'T') {\r\n                return 'True direction';\r\n            } else if (ref === 'M') {\r\n                return 'Magnetic direction';\r\n            }\r\n            return 'Unknown';\r\n        }\r\n    },\r\n    0x000f: 'GPSTrack',\r\n    0x0010: {\r\n        'name': 'GPSImgDirectionRef',\r\n        'description': (value) => {\r\n            const ref = value.join('');\r\n            if (ref === 'T') {\r\n                return 'True direction';\r\n            } else if (ref === 'M') {\r\n                return 'Magnetic direction';\r\n            }\r\n            return 'Unknown';\r\n        }\r\n    },\r\n    0x0011: 'GPSImgDirection',\r\n    0x0012: 'GPSMapDatum',\r\n    0x0013: {\r\n        'name': 'GPSDestLatitudeRef',\r\n        'description': (value) => {\r\n            const ref = value.join('');\r\n            if (ref === 'N') {\r\n                return 'North latitude';\r\n            } else if (ref === 'S') {\r\n                return 'South latitude';\r\n            }\r\n            return 'Unknown';\r\n        }\r\n    },\r\n    0x0014: {\r\n        'name': 'GPSDestLatitude',\r\n        'description': (value) => {\r\n            return value[0] + value[1] / 60 + value[2] / 3600;\r\n        }\r\n    },\r\n    0x0015: {\r\n        'name': 'GPSDestLongitudeRef',\r\n        'description': (value) => {\r\n            const ref = value.join('');\r\n            if (ref === 'E') {\r\n                return 'East longitude';\r\n            } else if (ref === 'W') {\r\n                return 'West longitude';\r\n            }\r\n            return 'Unknown';\r\n        }\r\n    },\r\n    0x0016: {\r\n        'name': 'GPSDestLongitude',\r\n        'description': (value) => {\r\n            return value[0] + value[1] / 60 + value[2] / 3600;\r\n        }\r\n    },\r\n    0x0017: {\r\n        'name': 'GPSDestBearingRef',\r\n        'description': (value) => {\r\n            const ref = value.join('');\r\n            if (ref === 'T') {\r\n                return 'True direction';\r\n            } else if (ref === 'M') {\r\n                return 'Magnetic direction';\r\n            }\r\n            return 'Unknown';\r\n        }\r\n    },\r\n    0x0018: 'GPSDestBearing',\r\n    0x0019: {\r\n        'name': 'GPSDestDistanceRef',\r\n        'description': (value) => {\r\n            const ref = value.join('');\r\n            if (ref === 'K') {\r\n                return 'Kilometers';\r\n            } else if (ref === 'M') {\r\n                return 'Miles';\r\n            } else if (ref === 'N') {\r\n                return 'Knots';\r\n            }\r\n            return 'Unknown';\r\n        }\r\n    },\r\n    0x001a: 'GPSDestDistance',\r\n    0x001b: {\r\n        'name': 'GPSProcessingMethod',\r\n        'description': getEncodedString\r\n    },\r\n    0x001c: {\r\n        'name': 'GPSAreaInformation',\r\n        'description': getEncodedString\r\n    },\r\n    0x001d: 'GPSDateStamp',\r\n    0x001e: {\r\n        'name': 'GPSDifferential',\r\n        'description': (value) => {\r\n            if (value === 0) {\r\n                return 'Measurement without differential correction';\r\n            } else if (value === 1) {\r\n                return 'Differential correction applied';\r\n            }\r\n            return 'Unknown';\r\n        }\r\n    }\r\n};\r\n","/* This Source Code Form is subject to the terms of the Mozilla Public\r\n * License, v. 2.0. If a copy of the MPL was not distributed with this\r\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\r\n\r\nexport default {\r\n    0x0001: 'InteroperabilityIndex'\r\n};\r\n","/* This Source Code Form is subject to the terms of the Mozilla Public\r\n * License, v. 2.0. If a copy of the MPL was not distributed with this\r\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\r\n\r\nimport IptcTagNames from './iptc-tag-names';\r\n\r\nconst BYTES_8BIM = 0x3842494d;\r\nconst BYTES_8BIM_SIZE = 4;\r\nconst RESOURCE_BLOCK_HEADER_SIZE = BYTES_8BIM_SIZE + 8;\r\nconst NAA_RESOURCE_BLOCK_TYPE = 0x0404;\r\nconst TAG_HEADER_SIZE = 5;\r\n\r\nexport default {\r\n    read\r\n};\r\n\r\nfunction read(dataView, dataOffset) {\r\n    try {\r\n        const {naaBlock, dataOffset: newDataOffset} = getNaaResourceBlock(dataView, dataOffset);\r\n        return parseTags(dataView, naaBlock, newDataOffset);\r\n    } catch (error) {\r\n        return {};\r\n    }\r\n}\r\n\r\nfunction getNaaResourceBlock(dataView, dataOffset) {\r\n    while (dataOffset + RESOURCE_BLOCK_HEADER_SIZE <= dataView.byteLength) {\r\n        const resourceBlock = getResourceBlock(dataView, dataOffset);\r\n        if (isNaaResourceBlock(resourceBlock)) {\r\n            return {naaBlock: resourceBlock, dataOffset};\r\n        }\r\n        dataOffset += RESOURCE_BLOCK_HEADER_SIZE + resourceBlock.size + getBlockPadding(resourceBlock);\r\n    }\r\n    throw new Error('No IPTC NAA resource block.');\r\n}\r\n\r\nfunction getResourceBlock(dataView, dataOffset) {\r\n    const RESOURCE_BLOCK_SIZE_OFFSET = 10;\r\n\r\n    if (dataView.getUint32(dataOffset, false) !== BYTES_8BIM) {\r\n        throw new Error('Not an IPTC resource block.');\r\n    }\r\n\r\n    return {\r\n        type: dataView.getUint16(dataOffset + BYTES_8BIM_SIZE, false),\r\n        size: dataView.getUint16(dataOffset + RESOURCE_BLOCK_SIZE_OFFSET, false)\r\n    };\r\n}\r\n\r\nfunction isNaaResourceBlock(resourceBlock) {\r\n    return resourceBlock.type === NAA_RESOURCE_BLOCK_TYPE;\r\n}\r\n\r\nfunction getBlockPadding(resourceBlock) {\r\n    if (resourceBlock.size % 2 !== 0) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction parseTags(dataView, naaBlock, dataOffset) {\r\n    const tags = {};\r\n    let encoding = undefined;\r\n\r\n    dataOffset += RESOURCE_BLOCK_HEADER_SIZE;\r\n    const endOfBlockOffset = dataOffset + naaBlock['size'];\r\n\r\n    while ((dataOffset < endOfBlockOffset) && (dataOffset < dataView.byteLength)) {\r\n        const {tag, tagSize} = readTag(dataView, dataOffset, tags, encoding);\r\n\r\n        // 29/8/18 : if tag is null then it hasn't been parsed correctly\r\n        if (tag === null) {\r\n            break; // Don't attempt any further parsing if the data looks invalid\r\n        }\r\n\r\n        // If the tag just parsed specifies the text encoding, save it for decoding later strings\r\n        if ('encoding' in tag) {\r\n            encoding = tag.encoding;\r\n        }\r\n\r\n        if ((tags[tag.name] === undefined) || (tag['repeatable'] === undefined)) {\r\n            tags[tag.name] = {\r\n                id: tag.id,\r\n                value: tag.value,\r\n                description: tag.description\r\n            };\r\n        } else {\r\n            if (!(tags[tag.name] instanceof Array)) {\r\n                tags[tag.name] = [{\r\n                    id: tag.id,\r\n                    value: tags[tag.name].value,\r\n                    description: tags[tag.name].description\r\n                }];\r\n            }\r\n            tags[tag.name].push({\r\n                id: tag.id,\r\n                value: tag.value,\r\n                description: tag.description\r\n            });\r\n        }\r\n\r\n        dataOffset += TAG_HEADER_SIZE + tagSize;\r\n    }\r\n\r\n    return tags;\r\n}\r\n\r\nfunction readTag(dataView, dataOffset, tags, encoding) {\r\n    const TAG_LEAD_BYTE = 0x1C;\r\n    const TAG_CODE_OFFSET = 1;\r\n    const TAG_SIZE_OFFSET = 3;\r\n\r\n    // 29/8/18 : sanity check that the tag starts with 0x1C\r\n    const leadByte = dataView.getUint8(dataOffset);\r\n    if (leadByte !== TAG_LEAD_BYTE) {\r\n        const tag = null, tagSize = 0;\r\n        return {tag, tagSize};\r\n    }\r\n\r\n    const tagCode = dataView.getUint16(dataOffset + TAG_CODE_OFFSET, false);\r\n    const tagSize = dataView.getUint16(dataOffset + TAG_SIZE_OFFSET, false);\r\n    const tagValue = getTagValue(dataView, dataOffset + TAG_HEADER_SIZE, tagSize);\r\n    let tag;\r\n\r\n    if (IptcTagNames['iptc'][tagCode] !== undefined) {\r\n        let tagName, tagDescription;\r\n\r\n        // Case that both 'name' and 'description' are defined for this code\r\n        if ((IptcTagNames['iptc'][tagCode]['name'] !== undefined)\r\n            && (IptcTagNames['iptc'][tagCode]['description'] !== undefined)) {\r\n            // Case that 'name' is a function rather than a string\r\n            if (typeof (IptcTagNames['iptc'][tagCode]['name']) === 'function') {\r\n                tagName = IptcTagNames['iptc'][tagCode]['name'](tagValue);\r\n            } else {\r\n                // 'name' is a string\r\n                tagName = IptcTagNames['iptc'][tagCode]['name'];\r\n            }\r\n            tagDescription = IptcTagNames['iptc'][tagCode]['description'](tagValue, tags);\r\n        } else {\r\n            // Case that 'name' is defined (but not 'description')\r\n            if (IptcTagNames['iptc'][tagCode]['name'] !== undefined) {\r\n                tagName = IptcTagNames['iptc'][tagCode]['name'];\r\n            } else {\r\n                // Case that the entry is a single string => it's the name\r\n                tagName = IptcTagNames['iptc'][tagCode];\r\n            }\r\n            if (tagValue instanceof Array) {\r\n                // If we have TextEncoder and an encoding\r\n                if ((typeof TextEncoder !== 'undefined') && (encoding !== undefined)) {\r\n                    // Decode the ArrayBuffer using the specified encoding\r\n                    const rawTagValue = dataView.buffer.slice(dataOffset + TAG_HEADER_SIZE, dataOffset + TAG_HEADER_SIZE + tagSize);\r\n                    tagDescription = new TextDecoder(encoding).decode(rawTagValue);\r\n                } else {\r\n                    tagDescription = tagValue.map((charCode) => String.fromCharCode(charCode)).join('');\r\n                    tagDescription = decodeAsciiValue(tagDescription);\r\n                }\r\n            } else {\r\n                tagDescription = tagValue;\r\n            }\r\n        }\r\n        // console.log (\"Name:\" + tagName + \", ID:\"  + tagCode + \", value:\" + tagValue);\r\n        tag = {\r\n            id: tagCode,\r\n            name: tagName,\r\n            value: tagValue,\r\n            description: tagDescription\r\n        };\r\n        if (IptcTagNames['iptc'][tagCode]['repeatable'] !== undefined) {\r\n            tag['repeatable'] = true;\r\n        }\r\n\r\n        // Optional 'encoding_name' from CCS\r\n        if (IptcTagNames['iptc'][tagCode]['encoding_name'] !== undefined) {\r\n            tag.encoding = IptcTagNames['iptc'][tagCode]['encoding_name'](tagValue);\r\n        }\r\n    } else {\r\n        tag = {\r\n            id: tagCode,\r\n            name: `undefined-${tagCode}`,\r\n            value: tagValue,\r\n            description: tagValue\r\n        };\r\n    }\r\n\r\n    return {tag, tagSize};\r\n}\r\n\r\nfunction getTagValue(dataView, offset, size) {\r\n    const value = [];\r\n\r\n    for (let valueIndex = 0; valueIndex < size; valueIndex++) {\r\n        value.push(dataView.getUint8(offset + valueIndex));\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\nfunction decodeAsciiValue(asciiValue) {\r\n    try {\r\n        return decodeURIComponent(escape(asciiValue));\r\n    } catch (error) {\r\n        return asciiValue;\r\n    }\r\n}\r\n","/* This Source Code Form is subject to the terms of the Mozilla Public\r\n * License, v. 2.0. If a copy of the MPL was not distributed with this\r\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\r\n\r\nimport {getStringValue} from './tag-names-utils';\r\n\r\nexport default {\r\n    'iptc': {\r\n        0x0100: {\r\n            'name': 'Model Version',\r\n            'description': (value) => {\r\n                return ((value[0] << 8) + value[1]).toString();\r\n            }\r\n        },\r\n        0x0105: {\r\n            'name': 'Destination',\r\n            'repeatable': true\r\n        },\r\n        0x0114: {\r\n            'name': 'File Format',\r\n            'description': (value) => {\r\n                return ((value[0] << 8) + value[1]).toString();\r\n            }\r\n        },\r\n        0x0116: {\r\n            'name': 'File Format Version',\r\n            'description': (value) => {\r\n                return ((value[0] << 8) + value[1]).toString();\r\n            }\r\n        },\r\n        0x011E: {\r\n            'name': 'Service Identifier'\r\n        },\r\n        0x0128: {\r\n            'name': 'Envelope Number'\r\n        },\r\n        0x0132: {\r\n            'name': 'Product ID'\r\n        },\r\n        0x013C: {\r\n            'name': 'Envelope Priority'\r\n        },\r\n        0x0146: {\r\n            'name': 'Date Sent',\r\n            'description': getCreationDate\r\n        },\r\n        0x0150: {\r\n            'name': 'Time Sent',\r\n            'description': getCreationTime\r\n        },\r\n        0x015a: {\r\n            'name': 'Coded Character Set',\r\n            'description': (value) => {\r\n                const string = getStringValue(value);\r\n                if (string === '\\x1b%G') {\r\n                    return 'UTF-8';\r\n                } else if (string === '\\x1b%5') {\r\n                    return 'windows-1252';\r\n                } else if (string === '\\x1b%/G') {\r\n                    return 'UTF-8 Level 1';\r\n                } else if (string === '\\x1b%/H') {\r\n                    return 'UTF-8 Level 2';\r\n                } else if (string === '\\x1b%/I') {\r\n                    return 'UTF-8 Level 3';\r\n                } else if (string === '\\x1B/A') {\r\n                    return 'iso-8859-1';\r\n                } else if (string === '\\x1B/B') {\r\n                    return 'iso-8859-2';\r\n                } else if (string === '\\x1B/C') {\r\n                    return 'iso-8859-3';\r\n                } else if (string === '\\x1B/D') {\r\n                    return 'iso-8859-4';\r\n                } else if (string === '\\x1B/@') {\r\n                    return 'iso-8859-5';\r\n                } else if (string === '\\x1B/G') {\r\n                    return 'iso-8859-6';\r\n                } else if (string === '\\x1B/F') {\r\n                    return 'iso-8859-7';\r\n                } else if (string === '\\x1B/H') {\r\n                    return 'iso-8859-8';\r\n                }\r\n                return 'Unknown';\r\n            },\r\n            'encoding_name': (value) => {\r\n                const string = getStringValue(value);\r\n                if (string === '\\x1b%G') {\r\n                    return 'utf-8';\r\n                } else if (string === '\\x1b%5') {\r\n                    return 'windows-1252';\r\n                } else if (string === '\\x1B/A') {\r\n                    return 'iso-8859-1';\r\n                } else if (string === '\\x1B/B') {\r\n                    return 'iso-8859-2';\r\n                } else if (string === '\\x1B/C') {\r\n                    return 'iso-8859-3';\r\n                } else if (string === '\\x1B/D') {\r\n                    return 'iso-8859-4';\r\n                } else if (string === '\\x1B/@') {\r\n                    return 'iso-8859-5';\r\n                } else if (string === '\\x1B/G') {\r\n                    return 'iso-8859-6';\r\n                } else if (string === '\\x1B/F') {\r\n                    return 'iso-8859-7';\r\n                } else if (string === '\\x1B/H') {\r\n                    return 'iso-8859-8';\r\n                }\r\n            }\r\n        },\r\n        0x0164: {\r\n            'name': 'UNO'\r\n        },\r\n        0x0178: {\r\n            'name': 'ARM Identifier',\r\n            'description': (value) => {\r\n                return ((value[0] << 8) + value[1]).toString();\r\n            }\r\n        },\r\n        0x017A: {\r\n            'name': 'ARM Version',\r\n            'description': (value) => {\r\n                return ((value[0] << 8) + value[1]).toString();\r\n            }\r\n        },\r\n        0x0200: {\r\n            'name': 'Record Version',\r\n            'description': (value) => {\r\n                return ((value[0] << 8) + value[1]).toString();\r\n            }\r\n        },\r\n        0x0203: 'Object Type Reference',\r\n        0x0204: 'Object Attribute Reference',\r\n        0x0205: 'Object Name',\r\n        0x0207: 'Edit Status',\r\n        0x0208: {\r\n            'name': 'Editorial Update',\r\n            'description': (value) => {\r\n                if (getStringValue(value) === '01') {\r\n                    return 'Additional Language';\r\n                }\r\n                return 'Unknown';\r\n            }\r\n        },\r\n        0x020a: 'Urgency',\r\n        0x020c: {\r\n            'name': 'Subject Reference',\r\n            'repeatable': true,\r\n            'description': (value) => {\r\n                const parts = getStringValue(value).split(':');\r\n                return parts[2] + (parts[3] ? '/' + parts[3] : '') + (parts[4] ? '/' + parts[4] : '');\r\n            }\r\n        },\r\n        0x020f: 'Category',\r\n        0x0214: {\r\n            'name': 'Supplemental Category',\r\n            'repeatable': true\r\n        },\r\n        0x0216: 'Fixture Identifier',\r\n        0x0219: {\r\n            'name': 'Keywords',\r\n            'repeatable': true\r\n        },\r\n        0x021a: {\r\n            'name': 'Content Location Code',\r\n            'repeatable': true\r\n        },\r\n        0x021b: {\r\n            'name': 'Content Location Name',\r\n            'repeatable': true\r\n        },\r\n        0x021e: 'Release Date',\r\n        0x0223: 'Release Time',\r\n        0x0225: 'Expiration Date',\r\n        0x0226: 'Expiration Time',\r\n        0x0228: 'Special Instructions',\r\n        0x022a: {\r\n            'name': 'Action Advised',\r\n            'description': (value) => {\r\n                const string = getStringValue(value);\r\n                if (string === '01') {\r\n                    return 'Object Kill';\r\n                } else if (string === '02') {\r\n                    return 'Object Replace';\r\n                } else if (string === '03') {\r\n                    return 'Object Append';\r\n                } else if (string === '04') {\r\n                    return 'Object Reference';\r\n                }\r\n                return 'Unknown';\r\n            }\r\n        },\r\n        0x022d: {\r\n            'name': 'Reference Service',\r\n            'repeatable': true\r\n        },\r\n        0x022f: {\r\n            'name': 'Reference Date',\r\n            'repeatable': true\r\n        },\r\n        0x0232: {\r\n            'name': 'Reference Number',\r\n            'repeatable': true\r\n        },\r\n        0x0237: {\r\n            'name': 'Date Created',\r\n            'description': getCreationDate\r\n        },\r\n        0x023c: {\r\n            'name': 'Time Created',\r\n            'description': getCreationTime\r\n        },\r\n        0x023e: {\r\n            'name': 'Digital Creation Date',\r\n            'description': getCreationDate\r\n        },\r\n        0x023f: {\r\n            'name': 'Digital Creation Time',\r\n            'description': getCreationTime\r\n        },\r\n        0x0241: 'Originating Program',\r\n        0x0246: 'Program Version',\r\n        0x024b: {\r\n            'name': 'Object Cycle',\r\n            'description': (value) => {\r\n                const string = getStringValue(value);\r\n                if (string === 'a') {\r\n                    return 'morning';\r\n                } else if (string === 'p') {\r\n                    return 'evening';\r\n                } else if (string === 'b') {\r\n                    return 'both';\r\n                }\r\n                return 'Unknown';\r\n            }\r\n        },\r\n        0x0250: {\r\n            'name': 'By-line',\r\n            'repeatable': true\r\n        },\r\n        0x0255: {\r\n            'name': 'By-line Title',\r\n            'repeatable': true\r\n        },\r\n        0x025a: 'City',\r\n        0x025c: 'Sub-location',\r\n        0x025f: 'Province/State',\r\n        0x0264: 'Country/Primary Location Code',\r\n        0x0265: 'Country/Primary Location Name',\r\n        0x0267: 'Original Transmission Reference',\r\n        0x0269: 'Headline',\r\n        0x026e: 'Credit',\r\n        0x0273: 'Source',\r\n        0x0274: 'Copyright Notice',\r\n        0x0276: {\r\n            'name': 'Contact',\r\n            'repeatable': true\r\n        },\r\n        0x0278: 'Caption/Abstract',\r\n        0x027a: {\r\n            'name': 'Writer/Editor',\r\n            'repeatable': true\r\n        },\r\n        0x027d: {\r\n            'name': 'Rasterized Caption',\r\n            'description': (value) => value\r\n        },\r\n        0x0282: 'Image Type',\r\n        0x0283: {\r\n            'name': 'Image Orientation',\r\n            'description': (value) => {\r\n                const string = getStringValue(value);\r\n                if (string === 'P') {\r\n                    return 'Portrait';\r\n                } else if (string === 'L') {\r\n                    return 'Landscape';\r\n                } else if (string === 'S') {\r\n                    return 'Square';\r\n                }\r\n                return 'Unknown';\r\n            }\r\n        },\r\n        0x0287: 'Language Identifier',\r\n        0x0296: {\r\n            'name': 'Audio Type',\r\n            'description': (value) => {\r\n                const stringValue = getStringValue(value);\r\n                const character0 = stringValue.charAt(0);\r\n                const character1 = stringValue.charAt(1);\r\n                let description = '';\r\n\r\n                if (character0 === '1') {\r\n                    description += 'Mono';\r\n                } else if (character0 === '2') {\r\n                    description += 'Stereo';\r\n                }\r\n\r\n                if (character1 === 'A') {\r\n                    description += ', actuality';\r\n                } else if (character1 === 'C') {\r\n                    description += ', question and answer session';\r\n                } else if (character1 === 'M') {\r\n                    description += ', music, transmitted by itself';\r\n                } else if (character1 === 'Q') {\r\n                    description += ', response to a question';\r\n                } else if (character1 === 'R') {\r\n                    description += ', raw sound';\r\n                } else if (character1 === 'S') {\r\n                    description += ', scener';\r\n                } else if (character1 === 'V') {\r\n                    description += ', voicer';\r\n                } else if (character1 === 'W') {\r\n                    description += ', wrap';\r\n                }\r\n\r\n                if (description !== '') {\r\n                    return description;\r\n                }\r\n                return stringValue;\r\n            }\r\n        },\r\n        0x0297: {\r\n            'name': 'Audio Sampling Rate',\r\n            'description': (value) => parseInt(getStringValue(value), 10) + ' Hz'\r\n        },\r\n        0x0298: {\r\n            'name': 'Audio Sampling Resolution',\r\n            'description': (value) => {\r\n                const bits = parseInt(getStringValue(value), 10);\r\n                return bits + (bits === 1 ? ' bit' : ' bits');\r\n            }\r\n        },\r\n        0x0299: {\r\n            'name': 'Audio Duration',\r\n            'description': (value) => {\r\n                const duration = getStringValue(value);\r\n                if (duration.length >= 6) {\r\n                    return duration.substr(0, 2) + ':' + duration.substr(2, 2) + ':' + duration.substr(4, 2);\r\n                }\r\n                return duration;\r\n            }\r\n        },\r\n        0x029a: 'Audio Outcue',\r\n        0x02c8: {\r\n            'name': (value) => {\r\n                return value.length === 2 ? 'ObjectData Preview File Format' : 'Record 2 destination';\r\n            },\r\n            'description': (value) => {\r\n                if (value.length === 2) {\r\n                    const intValue = (value[0] << 8) + value[1];\r\n                    if (intValue === 0) {\r\n                        return 'No ObjectData';\r\n                    } else if (intValue === 1) {\r\n                        return 'IPTC-NAA Digital Newsphoto Parameter Record';\r\n                    } else if (intValue === 2) {\r\n                        return 'IPTC7901 Recommended Message Format';\r\n                    } else if (intValue === 3) {\r\n                        return 'Tagged Image File Format (Adobe/Aldus Image data)';\r\n                    } else if (intValue === 4) {\r\n                        return 'Illustrator (Adobe Graphics data)';\r\n                    } else if (intValue === 5) {\r\n                        return 'AppleSingle (Apple Computer Inc)';\r\n                    } else if (intValue === 6) {\r\n                        return 'NAA 89-3 (ANPA 1312)';\r\n                    } else if (intValue === 7) {\r\n                        return 'MacBinary II';\r\n                    } else if (intValue === 8) {\r\n                        return 'IPTC Unstructured Character Oriented File Format (UCOFF)';\r\n                    } else if (intValue === 9) {\r\n                        return 'United Press International ANPA 1312 variant';\r\n                    } else if (intValue === 10) {\r\n                        return 'United Press International Down-Load Message';\r\n                    } else if (intValue === 11) {\r\n                        return 'JPEG File Interchange (JFIF)';\r\n                    } else if (intValue === 12) {\r\n                        return 'Photo-CD Image-Pac (Eastman Kodak)';\r\n                    } else if (intValue === 13) {\r\n                        return 'Microsoft Bit Mapped Graphics File [*.BMP]';\r\n                    } else if (intValue === 14) {\r\n                        return 'Digital Audio File [*.WAV] (Microsoft & Creative Labs)';\r\n                    } else if (intValue === 15) {\r\n                        return 'Audio plus Moving Video [*.AVI] (Microsoft)';\r\n                    } else if (intValue === 16) {\r\n                        return 'PC DOS/Windows Executable Files [*.COM][*.EXE]';\r\n                    } else if (intValue === 17) {\r\n                        return 'Compressed Binary File [*.ZIP] (PKWare Inc)';\r\n                    } else if (intValue === 18) {\r\n                        return 'Audio Interchange File Format AIFF (Apple Computer Inc)';\r\n                    } else if (intValue === 19) {\r\n                        return 'RIFF Wave (Microsoft Corporation)';\r\n                    } else if (intValue === 20) {\r\n                        return 'Freehand (Macromedia/Aldus)';\r\n                    } else if (intValue === 21) {\r\n                        return 'Hypertext Markup Language \"HTML\" (The Internet Society)';\r\n                    } else if (intValue === 22) {\r\n                        return 'MPEG 2 Audio Layer 2 (Musicom), ISO/IEC';\r\n                    } else if (intValue === 23) {\r\n                        return 'MPEG 2 Audio Layer 3, ISO/IEC';\r\n                    } else if (intValue === 24) {\r\n                        return 'Portable Document File (*.PDF) Adobe';\r\n                    } else if (intValue === 25) {\r\n                        return 'News Industry Text Format (NITF)';\r\n                    } else if (intValue === 26) {\r\n                        return 'Tape Archive (*.TAR)';\r\n                    } else if (intValue === 27) {\r\n                        return 'Tidningarnas Telegrambyrå NITF version (TTNITF DTD)';\r\n                    } else if (intValue === 28) {\r\n                        return 'Ritzaus Bureau NITF version (RBNITF DTD)';\r\n                    } else if (intValue === 29) {\r\n                        return 'Corel Draw [*.CDR]';\r\n                    }\r\n                } else {\r\n                    const strValue = getStringValue(value);\r\n                    return strValue;\r\n                }\r\n            }\r\n        },\r\n        0x02c9: {\r\n            'name': 'ObjectData Preview File Format Version',\r\n            'description': (value, tags) => {\r\n                // Format ID, Version ID, Version Description\r\n                const formatVersions = {\r\n                    '00': {'00': '1'},\r\n                    '01': {'01': '1', '02': '2', '03': '3', '04': '4'},\r\n                    '02': {'04': '4'},\r\n                    '03': {'01': '5.0', '02': '6.0'},\r\n                    '04': {'01': '1.40'},\r\n                    '05': {'01': '2'},\r\n                    '06': {'01': '1'},\r\n                    '11': {'01': '1.02'},\r\n                    '20': {'01': '3.1', '02': '4.0', '03': '5.0', '04': '5.5'},\r\n                    '21': {'02': '2.0'}\r\n                };\r\n                const stringValue = getStringValue(value);\r\n\r\n                if (tags['ObjectData Preview File Format']) {\r\n                    const objectDataPreviewFileFormat = getStringValue(tags['ObjectData Preview File Format'].value);\r\n                    if (formatVersions[objectDataPreviewFileFormat]\r\n                        && formatVersions[objectDataPreviewFileFormat][stringValue]) {\r\n                        return formatVersions[objectDataPreviewFileFormat][stringValue];\r\n                    }\r\n                }\r\n\r\n                return stringValue;\r\n            }\r\n        },\r\n        0x02ba: 'ShortDocumentID',\r\n        0x02bb: 'UniqueDocumentID',\r\n        0x02bc: 'OwnerID',\r\n        0x02ca: 'ObjectData Preview Data',\r\n        0x070a: {\r\n            'name': 'Size Mode',\r\n            'description': (value) => {\r\n                return (value[0]).toString();\r\n            }\r\n        },\r\n        0x0714: {\r\n            'name': 'Max Subfile Size',\r\n            'description': (value) => {\r\n                let n = 0;\r\n                for (let i = 0; i < value.length; i++) {\r\n                    n = (n << 8) + value[i];\r\n                }\r\n                return n.toString();\r\n            }\r\n        },\r\n        0x075a: {\r\n            'name': 'ObjectData Size Announced',\r\n            'description': (value) => {\r\n                let n = 0;\r\n                for (let i = 0; i < value.length; i++) {\r\n                    n = (n << 8) + value[i];\r\n                }\r\n                return n.toString();\r\n            }\r\n        }\r\n\r\n    }\r\n};\r\n\r\nfunction getCreationDate(value) {\r\n    const date = getStringValue(value);\r\n\r\n    if (date.length >= 8) {\r\n        return date.substr(0, 4) + '-' + date.substr(4, 2) + '-' + date.substr(6, 2);\r\n    }\r\n\r\n    return date;\r\n}\r\n\r\nfunction getCreationTime(value) {\r\n    const time = getStringValue(value);\r\n    let parsedTime = time;\r\n\r\n    if (time.length >= 6) {\r\n        parsedTime = time.substr(0, 2) + ':' + time.substr(2, 2) + ':' + time.substr(4, 2);\r\n        if (time.length === 11) {\r\n            parsedTime += time.substr(6, 1) + time.substr(7, 2) + ':' + time.substr(9, 2);\r\n        }\r\n    }\r\n\r\n    return parsedTime;\r\n}\r\n","/* This Source Code Form is subject to the terms of the Mozilla Public\r\n * License, v. 2.0. If a copy of the MPL was not distributed with this\r\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\r\n\r\nimport {getStringFromDataView} from './utils';\r\nimport XmpTagNames from './xmp-tag-names';\r\n\r\nexport default {\r\n    read\r\n};\r\n\r\nfunction read(dataView, dataOffset, metadataSize) {\r\n    try {\r\n        const doc = getDocument(dataView, dataOffset, metadataSize);\r\n        const rdf = getRDF(doc);\r\n\r\n        return parseXMPObject(convertToObject(rdf, true));\r\n    } catch (error) {\r\n        return {};\r\n    }\r\n}\r\n\r\nfunction getDocument(dataView, dataOffset, metadataSize) {\r\n    if (typeof DOMParser === 'undefined') {\r\n        console.warn('Warning: DOMParser is not available. If you\\'re using Node.js you probably want to do this:\\n  1. Install a DOM parser, e.g. xmldom: npm install --save xmldom\\n  2. Require that at the top of your script: global.DOMParser = require(\\'xmldom\\').DOMParser;\\nSee an example of this in the ExifReader example directory.'); // eslint-disable-line no-console\r\n        throw new Error();\r\n    }\r\n\r\n    const domParser = new DOMParser();\r\n    const xmlSource = getStringFromDataView(dataView, dataOffset, metadataSize);\r\n    const doc = domParser.parseFromString(xmlSource, 'application/xml');\r\n\r\n    if (doc.documentElement.nodeName === 'parsererror') {\r\n        throw new Error();\r\n    }\r\n\r\n    return doc;\r\n}\r\n\r\nfunction getRDF(node) {\r\n    for (let i = 0; i < node.childNodes.length; i++) {\r\n        if (node.childNodes[i].tagName === 'x:xmpmeta') {\r\n            return getRDF(node.childNodes[i]);\r\n        }\r\n        if (node.childNodes[i].tagName === 'rdf:RDF') {\r\n            return node.childNodes[i];\r\n        }\r\n    }\r\n\r\n    throw new Error();\r\n}\r\n\r\nfunction convertToObject(node, isTopNode = false) {\r\n    const childNodes = getChildNodes(node);\r\n\r\n    if (hasTextOnlyContent(childNodes)) {\r\n        if (isTopNode) {\r\n            return {};\r\n        }\r\n        return getTextValue(childNodes[0]);\r\n    }\r\n\r\n    return getElementsFromNodes(childNodes);\r\n}\r\n\r\nfunction getChildNodes(node) {\r\n    const elements = [];\r\n\r\n    for (let i = 0; i < node.childNodes.length; i++) {\r\n        elements.push(node.childNodes[i]);\r\n    }\r\n\r\n    return elements;\r\n}\r\n\r\nfunction hasTextOnlyContent(nodes) {\r\n    return (nodes.length === 1) && (nodes[0].nodeName === '#text');\r\n}\r\n\r\nfunction getTextValue(node) {\r\n    return node.nodeValue;\r\n}\r\n\r\nfunction getElementsFromNodes(nodes) {\r\n    const elements = {};\r\n\r\n    nodes.forEach((node) => {\r\n        if (isElement(node)) {\r\n            const nodeElement = getElementFromNode(node);\r\n\r\n            if (elements[node.nodeName] !== undefined) {\r\n                if (!Array.isArray(elements[node.nodeName])) {\r\n                    elements[node.nodeName] = [elements[node.nodeName]];\r\n                }\r\n                elements[node.nodeName].push(nodeElement);\r\n            } else {\r\n                elements[node.nodeName] = nodeElement;\r\n            }\r\n        }\r\n    });\r\n\r\n    return elements;\r\n}\r\n\r\nfunction isElement(node) {\r\n    return (node.nodeName) && (node.nodeName !== '#text');\r\n}\r\n\r\nfunction getElementFromNode(node) {\r\n    return {\r\n        attributes: getAttributes(node),\r\n        value: convertToObject(node)\r\n    };\r\n}\r\n\r\nfunction getAttributes(element) {\r\n    const attributes = {};\r\n\r\n    for (let i = 0; i < element.attributes.length; i++) {\r\n        attributes[element.attributes[i].nodeName] = element.attributes[i].value;\r\n    }\r\n\r\n    return attributes;\r\n}\r\n\r\nfunction parseXMPObject(xmpObject) {\r\n    const tags = {};\r\n\r\n    if (typeof xmpObject === 'string') {\r\n        return xmpObject;\r\n    }\r\n\r\n    for (const nodeName in xmpObject) {\r\n        let nodes = xmpObject[nodeName];\r\n\r\n        if (!Array.isArray(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n\r\n        nodes.forEach((node) => {\r\n            Object.assign(tags, parseNodeAttributesAsTags(node.attributes));\r\n            if (typeof node.value === 'object') {\r\n                Object.assign(tags, parseNodeChildrenAsTags(node.value));\r\n            }\r\n        });\r\n    }\r\n\r\n    return tags;\r\n}\r\n\r\nfunction parseNodeAttributesAsTags(attributes) {\r\n    const tags = {};\r\n\r\n    for (const name in attributes) {\r\n        if (isTagAttribute(name)) {\r\n            tags[getLocalName(name)] = {\r\n                value: attributes[name],\r\n                attributes: {},\r\n                description: getDescription(attributes[name], name)\r\n            };\r\n        }\r\n    }\r\n\r\n    return tags;\r\n}\r\n\r\nfunction isTagAttribute(name) {\r\n    return (name !== 'rdf:parseType') && (!isNamespaceDefinition(name));\r\n}\r\n\r\nfunction isNamespaceDefinition(name) {\r\n    return name.split(':')[0] === 'xmlns';\r\n}\r\n\r\nfunction getLocalName(name) {\r\n    return name.split(':')[1];\r\n}\r\n\r\nfunction getDescription(value, name = undefined) {\r\n    if (Array.isArray(value)) {\r\n        return getDescriptionOfArray(value);\r\n    }\r\n    if (typeof value === 'object') {\r\n        return getDescriptionOfObject(value);\r\n    }\r\n\r\n    try {\r\n        if ((name) && (typeof XmpTagNames[name] === 'function')) {\r\n            return XmpTagNames[name](value);\r\n        }\r\n        return decodeURIComponent(escape(value));\r\n    } catch (error) {\r\n        return value;\r\n    }\r\n}\r\n\r\nfunction getDescriptionOfArray(value) {\r\n    return value.map((item) => {\r\n        if (item.value !== undefined) {\r\n            return getDescription(item.value);\r\n        }\r\n        return getDescription(item);\r\n    }).join(', ');\r\n}\r\n\r\nfunction getDescriptionOfObject(value) {\r\n    const descriptions = [];\r\n\r\n    for (const key in value) {\r\n        descriptions.push(`${getClearTextKey(key)}: ${value[key].value}`);\r\n    }\r\n\r\n    return descriptions.join('; ');\r\n}\r\n\r\nfunction getClearTextKey(key) {\r\n    if (key === 'CiAdrCity') {\r\n        return 'CreatorCity';\r\n    }\r\n    if (key === 'CiAdrCtry') {\r\n        return 'CreatorCountry';\r\n    }\r\n    if (key === 'CiAdrExtadr') {\r\n        return 'CreatorAddress';\r\n    }\r\n    if (key === 'CiAdrPcode') {\r\n        return 'CreatorPostalCode';\r\n    }\r\n    if (key === 'CiAdrRegion') {\r\n        return 'CreatorRegion';\r\n    }\r\n    if (key === 'CiEmailWork') {\r\n        return 'CreatorWorkEmail';\r\n    }\r\n    if (key === 'CiTelWork') {\r\n        return 'CreatorWorkPhone';\r\n    }\r\n    if (key === 'CiUrlWork') {\r\n        return 'CreatorWorkUrl';\r\n    }\r\n    return key;\r\n}\r\n\r\nfunction parseNodeChildrenAsTags(children) {\r\n    const tags = {};\r\n\r\n    for (const name in children) {\r\n        if (!isNamespaceDefinition(name)) {\r\n            tags[getLocalName(name)] = parseNodeAsTag(children[name], name);\r\n        }\r\n    }\r\n\r\n    return tags;\r\n}\r\n\r\nfunction parseNodeAsTag(node, name) {\r\n    if (hasNestedSimpleRdfDescription(node)) {\r\n        return parseNodeAsSimpleRdfDescription(node, name);\r\n    } else if (hasNestedStructureRdfDescription(node)) {\r\n        return parseNodeAsStructureRdfDescription(node, name);\r\n    } else if (isCompactStructure(node)) {\r\n        return parseNodeAsCompactStructure(node, name);\r\n    } else if (isArray(node)) {\r\n        return parseNodeAsArray(node, name);\r\n    }\r\n    return parseNodeAsSimpleValue(node, name);\r\n}\r\n\r\nfunction hasNestedSimpleRdfDescription(node) {\r\n    return ((node.attributes['rdf:parseType'] === 'Resource') && (node.value['rdf:value'] !== undefined))\r\n        || ((node.value['rdf:Description'] !== undefined) && (node.value['rdf:Description'].value['rdf:value'] !== undefined));\r\n}\r\n\r\nfunction parseNodeAsSimpleRdfDescription(node, name) {\r\n    const attributes = parseNodeAttributes(node);\r\n\r\n    if (node.value['rdf:Description'] !== undefined) {\r\n        node = node.value['rdf:Description'];\r\n    }\r\n\r\n    Object.assign(attributes, parseNodeAttributes(node), parseNodeChildrenAsAttributes(node));\r\n\r\n    const value = parseRdfValue(node);\r\n\r\n    return {\r\n        value,\r\n        attributes,\r\n        description: getDescription(value, name)\r\n    };\r\n}\r\n\r\nfunction parseNodeAttributes(node) {\r\n    const attributes = {};\r\n\r\n    for (const name in node.attributes) {\r\n        if ((name !== 'rdf:parseType') && (name !== 'rdf:resource') && (!isNamespaceDefinition(name))) {\r\n            attributes[getLocalName(name)] = node.attributes[name];\r\n        }\r\n    }\r\n\r\n    return attributes;\r\n}\r\n\r\nfunction parseNodeChildrenAsAttributes(node) {\r\n    const attributes = {};\r\n\r\n    for (const name in node.value) {\r\n        if ((name !== 'rdf:value') && (!isNamespaceDefinition(name))) {\r\n            attributes[getLocalName(name)] = node.value[name].value;\r\n        }\r\n    }\r\n\r\n    return attributes;\r\n}\r\n\r\nfunction parseRdfValue(node) {\r\n    return getURIValue(node.value['rdf:value']) || node.value['rdf:value'].value;\r\n}\r\n\r\nfunction hasNestedStructureRdfDescription(node) {\r\n    return (node.attributes['rdf:parseType'] === 'Resource')\r\n        || ((node.value['rdf:Description'] !== undefined) && (node.value['rdf:Description'].value['rdf:value'] === undefined));\r\n}\r\n\r\nfunction parseNodeAsStructureRdfDescription(node, name) {\r\n    const tag = {\r\n        value: {},\r\n        attributes: {}\r\n    };\r\n\r\n    if (node.value['rdf:Description'] !== undefined) {\r\n        Object.assign(tag.value, parseNodeAttributesAsTags(node.value['rdf:Description'].attributes));\r\n        Object.assign(tag.attributes, parseNodeAttributes(node));\r\n        node = node.value['rdf:Description'];\r\n    }\r\n\r\n    Object.assign(tag.value, parseNodeChildrenAsTags(node.value));\r\n\r\n    tag.description = getDescription(tag.value, name);\r\n\r\n    return tag;\r\n}\r\n\r\nfunction isCompactStructure(node) {\r\n    return (Object.keys(node.value).length === 0)\r\n        && (node.attributes['rdf:resource'] === undefined);\r\n}\r\n\r\nfunction parseNodeAsCompactStructure(node, name) {\r\n    const value = parseNodeAttributesAsTags(node.attributes);\r\n\r\n    return {\r\n        value,\r\n        attributes: {},\r\n        description: getDescription(value, name)\r\n    };\r\n}\r\n\r\nfunction isArray(node) {\r\n    return getArrayChild(node.value) !== undefined;\r\n}\r\n\r\nfunction getArrayChild(value) {\r\n    return value['rdf:Bag'] || value['rdf:Seq'] || value['rdf:Alt'];\r\n}\r\n\r\nfunction parseNodeAsArray(node, name) {\r\n    let items = getArrayChild(node.value).value['rdf:li'];\r\n    const attributes = parseNodeAttributes(node);\r\n    const value = [];\r\n\r\n    if (!Array.isArray(items)) {\r\n        items = [items];\r\n    }\r\n\r\n    items.forEach((item) => {\r\n        value.push(parseArrayValue(item));\r\n    });\r\n\r\n    return {\r\n        value,\r\n        attributes,\r\n        description: getDescription(value, name)\r\n    };\r\n}\r\n\r\nfunction parseArrayValue(item) {\r\n    if (hasNestedSimpleRdfDescription(item)) {\r\n        return parseNodeAsSimpleRdfDescription(item);\r\n    }\r\n\r\n    if (hasNestedArrayValue(item)) {\r\n        return parseNodeChildrenAsTags(item.value);\r\n    }\r\n\r\n    return {\r\n        value: item.value,\r\n        attributes: parseNodeAttributes(item),\r\n        description: getDescription(item.value)\r\n    };\r\n}\r\n\r\nfunction hasNestedArrayValue(node) {\r\n    return node.attributes['rdf:parseType'] === 'Resource';\r\n}\r\n\r\nfunction parseNodeAsSimpleValue(node, name) {\r\n    const value = getURIValue(node) || parseXMPObject(node.value);\r\n\r\n    return {\r\n        value,\r\n        attributes: parseNodeAttributes(node),\r\n        description: getDescription(value, name)\r\n    };\r\n}\r\n\r\nfunction getURIValue(node) {\r\n    return node.attributes && node.attributes['rdf:resource'];\r\n}\r\n","/* This Source Code Form is subject to the terms of the Mozilla Public\r\n * License, v. 2.0. If a copy of the MPL was not distributed with this\r\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\r\n\r\nexport default {\r\n    'tiff:Orientation'(value) {\r\n        if (value === '1') {\r\n            return 'Horizontal (normal)';\r\n        }\r\n        if (value === '2') {\r\n            return 'Mirror horizontal';\r\n        }\r\n        if (value === '3') {\r\n            return 'Rotate 180';\r\n        }\r\n        if (value === '4') {\r\n            return 'Mirror vertical';\r\n        }\r\n        if (value === '5') {\r\n            return 'Mirror horizontal and rotate 270 CW';\r\n        }\r\n        if (value === '6') {\r\n            return 'Rotate 90 CW';\r\n        }\r\n        if (value === '7') {\r\n            return 'Mirror horizontal and rotate 90 CW';\r\n        }\r\n        if (value === '8') {\r\n            return 'Rotate 270 CW';\r\n        }\r\n        return value;\r\n    },\r\n    'exif:GPSLatitude': calculateGPSValue,\r\n    'exif:GPSLongitude': calculateGPSValue\r\n};\r\n\r\nfunction calculateGPSValue(value) {\r\n    const [degreesString, minutesString] = value.split(',');\r\n    if ((degreesString !== undefined) && (minutesString !== undefined)) {\r\n        const degrees = parseFloat(degreesString);\r\n        const minutes = parseFloat(minutesString);\r\n        const ref = minutesString.charAt(minutesString.length - 1);\r\n        if ((!Number.isNaN(degrees)) && (!Number.isNaN(minutes))) {\r\n            return '' + (degrees + minutes / 60) + ref;\r\n        }\r\n    }\r\n    return value;\r\n}\r\n","/* This Source Code Form is subject to the terms of the Mozilla Public\r\n * License, v. 2.0. If a copy of the MPL was not distributed with this\r\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\r\n\r\n/**\r\n * Thrown when no Exif metadata was found for the given image.\r\n *\r\n * @param {string} message The error message.\r\n */\r\nfunction MetadataMissingError(message) {\r\n    this.name = 'MetadataMissingError';\r\n    this.message = message || 'No Exif data';\r\n    this.stack = (new Error()).stack;\r\n}\r\n\r\nMetadataMissingError.prototype = new Error;\r\n\r\nexport default {\r\n    MetadataMissingError,\r\n};\r\n"],"sourceRoot":""}